"""reserved experiments schemas

Revision ID: de3a0e9c69c9
Revises: 1869e16c4642
Create Date: 2025-10-06 17:44:28.211325

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'de3a0e9c69c9'
down_revision: Union[str, Sequence[str], None] = '1869e16c4642'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schema',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('software_id', sa.Integer(), nullable=False),
    sa.Column('device_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['device_type_id'], ['device_type.id'], ),
    sa.ForeignKeyConstraint(['software_id'], ['software.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schema_name'), 'schema', ['name'], unique=True)
    op.create_index(op.f('ix_schema_note'), 'schema', ['note'], unique=False)
    op.create_table('reserved_experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('experiment_commands', sa.JSON(), nullable=True),
    sa.Column('output_arguments', sa.JSON(), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('simulation_time', sa.Integer(), nullable=False),
    sa.Column('sampling_rate', sa.Integer(), nullable=False),
    sa.Column('filled', sa.Boolean(), nullable=False),
    sa.Column('remote_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reserved_experiment_filled'), 'reserved_experiment', ['filled'], unique=False)
    op.create_index(op.f('ix_reserved_experiment_note'), 'reserved_experiment', ['note'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reserved_experiment_note'), table_name='reserved_experiment')
    op.drop_index(op.f('ix_reserved_experiment_filled'), table_name='reserved_experiment')
    op.drop_table('reserved_experiment')
    op.drop_index(op.f('ix_schema_note'), table_name='schema')
    op.drop_index(op.f('ix_schema_name'), table_name='schema')
    op.drop_table('schema')
    # ### end Alembic commands ###
