"""experiment, sw models

Revision ID: 7cb418961419
Revises: 7e98f68bb238
Create Date: 2025-10-06 17:21:19.320474

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7cb418961419'
down_revision: Union[str, Sequence[str], None] = '7e98f68bb238'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('device', 'deleted_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint(op.f('device_server_id_fkey'), 'device', type_='foreignkey')
    op.drop_constraint(op.f('device_device_type_id_fkey'), 'device', type_='foreignkey')
    op.drop_column('device', 'device_type_id')
    op.drop_column('device', 'server_id')
    op.add_column('experiment', sa.Column('commands', sa.JSON(), nullable=True))
    op.add_column('experiment', sa.Column('experiment_commands', sa.JSON(), nullable=True))
    op.add_column('experiment', sa.Column('output_arguments', sa.JSON(), nullable=True))
    op.add_column('experiment', sa.Column('has_schema', sa.Boolean(), nullable=False))
    op.add_column('experiment', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('experiment', sa.Column('modified_at', sa.DateTime(), nullable=False))
    op.add_column('experiment', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_experiment_has_schema'), 'experiment', ['has_schema'], unique=False)
    op.alter_column('server', 'deleted_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('server', 'deleted_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_index(op.f('ix_experiment_has_schema'), table_name='experiment')
    op.drop_column('experiment', 'deleted_at')
    op.drop_column('experiment', 'modified_at')
    op.drop_column('experiment', 'created_at')
    op.drop_column('experiment', 'has_schema')
    op.drop_column('experiment', 'output_arguments')
    op.drop_column('experiment', 'experiment_commands')
    op.drop_column('experiment', 'commands')
    op.add_column('device', sa.Column('server_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('device', sa.Column('device_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('device_device_type_id_fkey'), 'device', 'device_type', ['device_type_id'], ['id'])
    op.create_foreign_key(op.f('device_server_id_fkey'), 'device', 'server', ['server_id'], ['id'])
    op.alter_column('device', 'deleted_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###
