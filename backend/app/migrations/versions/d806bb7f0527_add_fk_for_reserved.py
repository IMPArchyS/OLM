"""add fk for reserved

Revision ID: d806bb7f0527
Revises: de3a0e9c69c9
Create Date: 2025-10-06 20:24:12.385659

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd806bb7f0527'
down_revision: Union[str, Sequence[str], None] = 'de3a0e9c69c9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reserved_experiment', sa.Column('input', sa.JSON(), nullable=True))
    op.add_column('reserved_experiment', sa.Column('output', sa.JSON(), nullable=True))
    op.add_column('reserved_experiment', sa.Column('schema_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'reserved_experiment', 'schema', ['schema_id'], ['id'])
    op.drop_column('reserved_experiment', 'output_arguments')
    op.drop_column('reserved_experiment', 'experiment_commands')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reserved_experiment', sa.Column('experiment_commands', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('reserved_experiment', sa.Column('output_arguments', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'reserved_experiment', type_='foreignkey')
    op.drop_column('reserved_experiment', 'schema_id')
    op.drop_column('reserved_experiment', 'output')
    op.drop_column('reserved_experiment', 'input')
    # ### end Alembic commands ###
